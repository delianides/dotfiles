# use C-a, since it's on the home row and easier to hit than C-b
set-option -g prefix C-a
unbind-key C-a
bind-key C-a send-prefix

# Easy config reload
bind-key R source-file ~/.tmux.conf \; display-message "tmux.conf reloaded."

# Colors
# set-option -sa terminal-overrides ',xterm-256color:RGB'
# set-option -ga terminal-overrides ',xterm-256color:RGB'
# set -g default-terminal "screen-256color"

set -g default-terminal 'alacritty'
set-option -sa terminal-overrides ",alacritty*:Tc"
set-option -g focus-events on

# mouse
set-option -g mouse on

bind-key + select-layout main-horizontal
bind-key = select-layout main-vertical
set-window-option -g other-pane-height 25
set-window-option -g other-pane-width 80

bind-key a last-pane
bind-key q display-panes
bind-key c new-window
bind-key t next-window
bind-key T previous-window

bind-key [ copy-mode
bind-key ] paste-buffer

# # This maps tmux navigation and resize keys to the neovim ones so that they are both the same
# is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
#
# bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' { if -F '#{pane_at_left}' '' 'select-pane -L' }
# bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
# bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' { if -F '#{pane_at_top}' '' 'select-pane -U' }
# bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' { if -F '#{pane_at_right}' '' 'select-pane -R' }
#
# bind-key -T copy-mode-vi 'C-h' if -F '#{pane_at_left}' '' 'select-pane -L'
# bind-key -T copy-mode-vi 'C-j' if -F '#{pane_at_bottom}' '' 'select-pane -D'
# bind-key -T copy-mode-vi 'C-k' if -F '#{pane_at_top}' '' 'select-pane -U'
# bind-key -T copy-mode-vi 'C-l' if -F '#{pane_at_right}' '' 'select-pane -R'
#
# bind -n 'M-h' if-shell "$is_vim" 'send-keys M-h' 'resize-pane -L 1'
# bind -n 'M-j' if-shell "$is_vim" 'send-keys M-j' 'resize-pane -D 1'
# bind -n 'M-k' if-shell "$is_vim" 'send-keys M-k' 'resize-pane -U 1'
# bind -n 'M-l' if-shell "$is_vim" 'send-keys M-l' 'resize-pane -R 1'

bind-key -T copy-mode-vi M-h resize-pane -L 1
bind-key -T copy-mode-vi M-j resize-pane -D 1
bind-key -T copy-mode-vi M-k resize-pane -U 1
bind-key -T copy-mode-vi M-l resize-pane -R 1

# start window numbers at 1 to match keyboard order with tmux window order
set -g base-index 1
set-window-option -g pane-base-index 1

# allow vim to receive modifier keys
set-window-option -g xterm-keys on

# horizontal and vertical splits
unbind |
bind | split-window -h
unbind _
bind _ split-window

# resize pane
bind-key -r Left resize-pane -L 5
bind-key -r Up resize-pane -U 5
bind-key -r Down resize-pane -D 5
bind-key -r Right resize-pane -R 5

# renumber windows sequentially after closing any of them
set -g renumber-windows on

# switch to last pane
bind-key C-a last-pane

# sync pains
bind-key s set-window-option synchronize-panes

# choose tree
bind-key j choose-tree -swZ

# ----------------------
# set some pretty colors
# ----------------------
# set pane colors - hilight the active pane
# set-option -g pane-border-fg colour233 #base02
# set-option -g pane-active-border-fg colour240 #base01

set -g pane-border-style fg=colour242
set -g pane-active-border-style fg=colour237
set -g pane-active-border-style bg=colour233

# colorize messages in the command line
set-option -g message-style bg=black #base02
set-option -g message-style fg=brightred #orange

# ----------------------
# Status Bar
# -----------------------
set-option -g status on                # turn the status bar on

# visual notification of activity in other windows
setw -g monitor-activity off
set -g visual-activity off

# set color for status bar
set-option -g status-style bg=colour0
set-option -g status-style fg=colour31
set-window-option -g window-status-current-style fg=colour196

# -----------------------
# Shortcuts
# -----------------------

bind -n C-p display-popup -E "ta"

bind m display-popup -w50% -h20% -E "ntp"

bind k display-popup -E "\
    tmux list-sessions -F '#{?session_attached,,#{session_name}}' |\
    sed '/^$/d' |\
    fzf --reverse -m --ansi --header $'\e[33;41mKILL SESSION\e[m' --preview 'tmux capture-pane -pt {}' |\
    xargs -I {} tmux kill-session -t {}"

bind j display-popup -E "\
    tmux list-sessions -F '#{?session_attached,,#{session_name}}' |\
    sed '/^$/d' |\
    fzf --reverse --header jump-to-session --preview 'tmux capture-pane -pt {}'  |\
    xargs tmux switch-client -t"

bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M

bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel pbcopy

# status bar
set -g status-left-length 0
set -g status-right-length 100
set -g status-right '#{cpu_fg_color}CPU:#{cpu_percentage} #[default]#{battery_color_charge_fg}B:#{battery_percentage}#[default]#[fg=colour31] %I:%M%p %F'

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-logging'
set -g @plugin 'tmux-plugins/tmux-cpu'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'nhdaly/tmux-better-mouse-mode'

# Install TPM if it isn't currently installed
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
