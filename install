#!/bin/bash
# vim: tw=0
# from https://github.com/gabebw/dotfiles/blob/main/install.sh

set -eo pipefail

source ./bin/common

quietly_brew_bundle(){
  local brewfile=$1
  shift
  local regex='(^Using|Installing|Skipping )|error|failed'
  if [ "$CI" = true ] ; then
    stay_awake_while brew bundle list --file="$brewfile"
    stay_awake_while brew install rcm
  else
    stay_awake_while brew bundle --no-lock --file="$brewfile" "$@" | (grep -Ei "$regex" || true)
  fi
}

info "Checking for caffeinate..."
if command_does_not_exist caffeinate; then
  case "$OSTYPE" in
    darwin*)  brew install caffeinate ;; 
    linux*)   sudo apt-get install caffeinate -y ;;
    *)        echo "unknown: $OSTYPE" ;;
  esac
fi

info "Checking for command-line tools..."
if [ command_does_not_exist xcodebuild ] && [ "$OSTYPE" = 'darwin']; then
  stay_awake_while xcode-select --install
fi

info "Installing Homebrew (if not already installed)..."
if command_does_not_exist brew; then
  stay_awake_while /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
fi

info "Installing Homebrew packages..."
brew tap homebrew/bundle
quietly_brew_bundle "./Brewfile" --verbose

if ! echo "$SHELL" | grep -Fq zsh; then
  info "Your shell is not Zsh. Changing it to Zsh..."
  chsh -s /bin/zsh
fi

info "Linking dotfiles into ~..."
# Before `rcup` runs, there is no ~/.rcrc, so we must tell `rcup` where to look.
# We need the rcrc because it tells `rcup` to ignore thousands of useless Vim
# backup files that slow it down significantly.
export RCRC=rcrc
stay_awake_while rcup -f -d .

green "== Success!"

yellow "== Post-install instructions =="
yellow "1. Remap Caps Lock to Escape in the Keyboard prefpane"
