let mapleader=" "

" https://github.com/JetBrains/ideavim/blob/master/doc/IdeaVim%20Plugins.md
Plug 'machakann/vim-highlightedyank' " Highlight copied text
Plug 'tpope/vim-surround'            " Delete/change/add parentheses/quotes/XML-tags/much more with ease
Plug 'preservim/nerdtree'            " NERDTree
Plug 'justinmk/vim-sneak'            " More efficient jumps than f/F

set scrolloff=5          " Minimal number of lines above and below the cursor
set incsearch            " Show where search pattern typed so far matches
set visualbell           " No bleep sound
set which-key            " Enable Which-Key plugin
set notimeout            " Do not hide Which-Key popup
set hls                  " Enable search highlighting
set ignorecase smartcase " Case-insensitive search
set relativenumber       " Relative line numbers by default
set peekaboo             " Show contents in the registers (IDEA plugin required)

""" Map leader to space ---------------------
let mapleader=" "

""" Map jj to ESC ---------------------------
imap jj <ESC>

" Leader maps
map <Leader>n :set rnu!<CR>
map <Leader>sw <Action>(SurroundWith)
map <Leader>fm <Action>(ReformatCode)
map <Leader>o <Action>(OptimizeImports)
map <Leader>l <Action>(OverrideMethods)
map <Leader>i <Action>(ImplementMethods)
map <Leader>q <Action>(CloseAllEditors)
map <Leader>ds <Action>(ActivateProblemsViewToolWindow)
map <Leader>a ggVG
map <Leader>cs <Action>(ActivateCheckStyleC>olWindow)

" Splits
map <Leader>spv <Action>(SplitVertically)
map <Leader>sph <Action>(SplitHorizontally)
map <Leader>sm <Action>(MoveEditorToOppositeTabGroup)

" Git
map <Leader>gf <Action>(Git.Fetch)
map <Leader>gp <Action>(Vcs.UpdateProject)
map <Leader>gP <Action>(Vcs.Push)
map <Leader>gco <Action>(GitCheckoutFromInputAction)
map <Leader>gcm <Action>(CheckinProject)
map <Leader>gb <Action>(Git.Branches)

" Debugging
map <Leader>db <Action>(ToggleLineBreakpoint)
map <Leader>dr <Action>(Resume)
map <Leader>dn <Action>(StepOver)
map <Leader>di <Action>(StepInto)
map <Leader>do <Action>(StepOut)
map <Leader>dc <Action>(RunToCursor)

" Running
map <Leader>cd <Action>(DebugClass)
map <Leader>cr <Action>(RunClass)

" Finding stuff
map <Leader>ff <Action>(GotoFile)
map <Leader>fc <Action>(GotoClass)
map <Leader>fa <Action>(GotoAction)
map <Leader>fw <Action>(FindInPath)
map <Leader>fb <Action>(ShowBookmarks)

" Config file shortcuts
map <Leader>src <Action>(IdeaVim.ReloadVimRc.reload)
map <Leader>grc :e ~/.ideavimrc<CR>

" Sensible comment toggle
xmap <Leader>/ <Action>(CommentByLineComment)<ESC><ESC>
nmap <Leader>/ <Action>(CommentByLineComment)k

" Switch between splits
map <Leader>sh <c-w>h
map <Leader>sl <c-w>l
map <Leader>sj <c-w>j
map <Leader>sk <c-w>k

" HarpoonIJ (plugin required)
map <Leader>hs <Action>(ShowHarpoon)
map <Leader>ha <Action>(AddToHarpoon)
map <Leader>h1 <Action>(SetHarpoon1)
map <Leader>h2 <Action>(SetHarpoon2)
map <Leader>h3 <Action>(SetHarpoon3)
map <Leader>h4 <Action>(SetHarpoon4)
map <Leader>h5 <Action>(SetHarpoon5)
map <Leader>1 <Action>(GotoHarpoon1)
map <Leader>2 <Action>(GotoHarpoon2)
map <Leader>3 <Action>(GotoHarpoon3)
map <Leader>4 <Action>(GotoHarpoon4)
map <Leader>5 <Action>(GotoHarpoon5)

" Clear search highlights
nmap <ESC> :nohlsearch<CR>

" General actions
nmap U <C-r>
map [[ <Action>(MethodUp)
map ]] <Action>(MethodDown)
map <C-n> :NERDTreeToggle<CR>

" Folding
map zf <Action>(ExpandCollapseToggleAction)
map za <Action>(CollapseAllRegions)
map zA <Action>(ExpandAllRegions)
xmap zs <Action>(CollapseSelection)<ESC>

" Refactoring
nmap <Leader>rn <Action>(RenameElement)
nmap <Leader>rf <Action>(RenameFile)
nmap <Leader>rs <Action>(ChangeSignature)
nmap <Leader>rm <Action>(Move)
nmap <Leader>rc <Action>(CopyElement)

" Bookmarks
nmap m] <Action>(GotoNextBookmark)
nmap m[ <Action>(GotoPreviousBookmark)

" Go to
map gru <Action>(ShowUsages)
map grU <Action>(FindUsages)
map grr <Action>(RecentFiles)
map grt <Action>(GotoTypeDeclaration)
map grd <Action>(GotoDeclaration)
map gri <Action>(GotoImplementation)
map grs <Action>(GotoSuperMethod)
map grT <Action>(GotoTest)
map grn <Action>(VcsShowNextChangeMarker)
map grN <Action>(VcsShowPrevChangeMarker)

" Switch to English in normal mode (plugin required: IdeaVimExtension)
let keep_input_source_in_normal="com.apple.keylayout.ABC"
set keep-english-in-normal

" Replace default f/F/t/T with 1-char sneak
map f <Plug>Sneak_f
map F <Plug>Sneak_F
map t <Plug>Sneak_t
map T <Plug>Sneak_T
