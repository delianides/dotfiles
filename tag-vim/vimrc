" vim: fdm=marker foldlevel=98 foldenable sw=4 ts=4 sts=4
"        _
" __   _(_)_ __ ___  _ __ ___
" \ \ / / | '_ ` _ \| '__/ __|
"  \ V /| | | | | | | | | (__
" (_)_/ |_|_| |_| |_|_|  \___|
"
" VIMPATH
let $VIMPATH=expand('$HOME/.vim')
" Leader key
let mapleader = ' '
" exit to normal mode with 'jj', so i don't always have to hit the escape key
inoremap jj <ESC>
" No need for ex mode
nnoremap Q <nop>
" recording macros is not my thing
map q <Nop>
" Allow saving of files as sudo when I forgot to start vim using sudo.
cmap w!! w !sudo tee > /dev/null %

call plug#begin('~/.vim/plugged')

Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'
Plug 'jeffkreeftmeijer/vim-numbertoggle' " when using splits show absolute number for inactive
Plug 'tpope/vim-fugitive' " git commands in vim
Plug 'tpope/vim-vinegar' " netrw play nicely
Plug 'tpope/vim-sensible' " sensible vim defaults
Plug 'tpope/vim-surround' " surround vim objects with a string
Plug 'tpope/vim-commentary' " universal comment application
Plug 'tpope/vim-eunuch'
Plug 'tpope/vim-repeat' " allows . to repeat previous commands
Plug 'tpope/vim-unimpaired' " Moving around
Plug 'justinmk/vim-dirvish' | Plug 'kristijanhusak/vim-dirvish-git'
Plug 'RRethy/vim-illuminate'
Plug 'wellle/tmux-complete.vim'  " auto complete from adjacent tmux panes
Plug 'christoomey/vim-tmux-navigator' " navigating tmux panes and vim buffers alike
Plug 'junegunn/goyo.vim' | Plug 'junegunn/limelight.vim'
Plug 'neoclide/coc.nvim', {'branch': 'release'} " language server for neovim
Plug 'antoinemadec/coc-fzf' " use fzf for coc-lists
" Plug 'rhysd/devdocs.vim'
Plug 'voldikss/vim-floaterm'
Plug 'junegunn/vim-easy-align'

Plug 'sheerun/vim-polyglot' " includes most language packs
Plug 'fatih/vim-go', { 'do': ':GoUpdateBinaries' }
Plug 'hashivim/vim-terraform'
Plug 'leafgarland/typescript-vim', { 'for': ['typescript']}
Plug 'peitalin/vim-jsx-typescript'
Plug 'styled-components/vim-styled-components', { 'branch': 'main' }
Plug 'tpope/vim-rails', { 'for': ['ruby']} " Ruby on Rails
Plug 'godlygeek/tabular'
Plug 'plasticboy/vim-markdown'

Plug 'itchyny/lightline.vim'
Plug 'fatih/molokai'

call plug#end()
syntax on
colorscheme molokai
set termguicolors
let g:monokai_term_italic = 1

augroup vimrcEx
    autocmd!
    " http://vim.wikia.com/wiki/Detect_window_creation_with_WinEnter
    autocmd VimEnter * autocmd WinEnter * let w:created=1
    autocmd VimEnter * let w:created=1
    autocmd VimResized * wincmd =
    autocmd BufReadPost *
        \ if &ft != 'gitcommit' && line("'\"") > 0 && line("'\"") <= line("$") |
        \   exe "normal g`\"" |
        \ endif
augroup END

autocmd FileType ruby,eruby,yaml set iskeyword+=!,?
autocmd FileType ruby,eruby,yaml set isfname=_,-,48-57,A-Z,a-z,/
autocmd BufNewFile,BufRead *.rb setlocal sw=2 ts=2
autocmd BufNewFile,BufRead *.vim setlocal noet ts=4 sw=4 sts=4
autocmd BufNewFile,BufRead *.txt setlocal noet ts=4 sw=4
autocmd BufNewFile,BufRead *.md setlocal spell noet ts=4 sw=4

autocmd FileType gitcommit setlocal spell
autocmd FileType dockerfile,gitconfig,sh,toml set noexpandtab
autocmd FileType terraform setlocal commentstring=#\ %s
autocmd FileType markdown vmap <Leader><Bslash> :EasyAlign*<Bar><Enter>

autocmd BufNewFile,BufRead *.go setlocal noet ts=4 sw=4 sts=4
" Smart paste
" nnoremap <C-v> "+P=']
" inoremap <C-v> <C-o>"+P<C-o>=']
" Disable paste mode on leaving insert mode.
autocmd InsertLeave * set nopaste

let g:python3_host_prog = '/usr/local/bin/python3'
