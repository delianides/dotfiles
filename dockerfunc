#!/bin/bash
# From https://github.com/jfrazelle/dotfiles/blob/master/.dockerfunc

dcleanup(){
	docker rm -v $(docker ps --filter status=exited -q 2>/dev/null) 2>/dev/null
	docker rmi $(docker images --filter dangling=true -q 2>/dev/null) 2>/dev/null
}

del_stopped(){
	local name=$1
	local state=$(docker inspect --format "{{.State.Running}}" $name 2>/dev/null)

	if [[ "$state" == "false" ]]; then
		docker rm $name
	fi
}

relies_on(){
	local containers=$@

	for container in $containers; do
		local state=$(docker inspect --format "{{.State.Running}}" $container 2>/dev/null)

		if [[ "$state" == "false" ]] || [[ "$state" == "" ]]; then
			echo "$container is not running, starting it for you."
			$container
		fi
	done
}

notify_osd(){
	del_stopped notify_osd

	docker run -d \
		-v /etc/localtime:/etc/localtime:ro \
		-v /tmp/.X11-unix:/tmp/.X11-unix \
		--net none \
		-v /etc \
		-v /home/user/.dbus \
		-v /home/user/.cache/dconf \
		-e DISPLAY=unix$DISPLAY \
		--name notify_osd \
		jess/notify-osd
}

alias notify-send=notify_send
notify_send(){
	relies_on notify_osd
	local args=${@:2}

	docker exec -i notify_osd notify-send "$1" "${args}"
}

aws(){
	docker run -it --rm \
		-v $HOME/.aws:/root/.aws \
		--log-driver none \
		--name aws \
		jess/awscli "$@"
}

irssi() {
	del_stopped irssi
	# relies_on notify_osd

	docker run --rm -it \
		-v /etc/localtime:/etc/localtime:ro \
		-v $HOME/.dotfiles/irssi:/home/user/.irssi \
    -e IRC_PASSWORD=$IRC_PASSWORD \
    --read-only \
		--name irssi \
		jess/irssi
}

rainbowstream(){
	docker run -it --rm \
		-v /etc/localtime:/etc/localtime:ro \
	  -v $HOME/.rainbow_oauth:/root/.rainbow_oauth \
    -v $HOME/.rainbow_config.json:/root/.rainbow_config.json \
		--name rainbowstream \
		jess/rainbowstream
}

t(){
	docker run -t --rm \
		-v $HOME/.trc:/root/.trc \
		--log-driver none \
		jess/tcli "$@"
}
